.composer {
  width: 100%;
  position: relative;
}

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  background: var(--color-bg-primary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-xl);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  cursor: text;
  transition: box-shadow 300ms ease,
              border-color 300ms ease,
              background-color 300ms ease;
}

[data-theme="dark"] .container {
  background: #303030;
}

.inputWrapper {
  position: relative;
  display: flex;
  align-items: flex-end;
  width: 100%;
  min-height: 73px;
}

.textAreaContainer {
  position: relative;
  display: flex;
  flex: 1;
  align-items: flex-start;
  margin: 0 20px;
  min-height: 73px;
}

.textarea {
  width: 100%;
  min-height: 80px;
  max-height: 80vh;
  padding: 16px 60px 50px 0;
  border: none;
  background: transparent;
  color: var(--color-text-primary);
  font-family: var(--font-sans);
  font-size: 16px;
  line-height: 1.5;
  resize: none;
  outline: none;
  overflow-y: auto;
  scrollbar-width: thin;
  transition: opacity var(--transition-fast) ease;
}

.textarea::placeholder {
  color: var(--color-text-muted);
}

.textarea:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.footerActions {
  position: absolute;
  bottom: 8px;
  left: calc(2.5 * var(--spacing));
  right: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: visible;
}

.actionButtons {
  display: flex;
  gap: 8px;
  width: 100%;
  justify-content: space-between;
}

.actionGroup {
  display: flex;
  gap: 8px;
}

.actionButton {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 8px 8px;
  border: none;
  background: transparent;
  color: var(--color-text-secondary);
  font-size: 14px;
  font-weight: 500;
  border-radius: 9999px;
  cursor: pointer;
  transition: all 0.15s ease;
}

.actionButton:hover {
  background: var(--color-bg-tertiary);
}

.buttonText {
  display: flex;
  align-items: center;
  gap: 6px;
  padding-left: 4px;
}

.buttonLabel {
  display: block;
  max-width: 128px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.actionGroupRight {
  position: absolute;
  right: 10px;
  bottom: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.micButton:hover:not(:disabled) {
  background: var(--color-bg-tertiary);
  color: var(--color-text-primary);
  transform: scale(1.03);
}

.micButton:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.micButton.micError {
  background: #fca5a5;
  color: #991b1b;
}

.micButton.micError:hover:not(:disabled) {
  background: #f87171;
  color: #7f1d1d;
}

.micButton:focus-visible {
  outline: 2px solid var(--color-accent);
  outline-offset: 2px;
}

.iconButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  padding: 0;
  border: none;
  background: var(--color-text-primary);
  color: var(--color-bg-primary);
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.15s ease;
}

.iconButton:hover:not(:disabled) {
  transform: scale(1.03);
}

.iconButton:disabled {
  cursor: not-allowed;
  background: transparent;
  color: var(--color-text-secondary);
  opacity: 1;
}

/* Spinning animation for loader */
.spinning {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Autocomplete styles */
.autocompleteDropdown {
  margin-top: 8px;
  width: 100%;
}

.autocompleteDropdownAbove {
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
  margin-top: 0;
  margin-bottom: 8px;
  z-index: 100;
}

.pathAutocomplete {
  /* Additional styling if needed */
}

.permissionButtons {
  display: flex;
  gap: 8px;
}

.permissionButton {
  width: 32px;
  height: 32px;
}

.btn.approveButton {
  background-color: transparent;
}

.approveButton:hover:not(:disabled) {
  background-color: var(--color-bg-tertiary);
}

.btn.denyButton {
  background-color: transparent;
}

.denyButton:hover:not(:disabled) {
  background-color: var(--color-bg-tertiary);
}

/* Focus styles for accessibility */
.iconButton:focus-visible {
  outline: 2px solid var(--color-accent);
  outline-offset: 2px;
  background: var(--color-text-primary);
  color: var(--color-bg-primary);
}

.actionButton:focus-visible {
  outline: 2px solid var(--color-accent);
  outline-offset: 2px;
}

/* Dark mode specific adjustments */
[data-theme="dark"] .inputWrapper.permissionMode {
  background-color: rgba(245, 158, 11, 0.05);
}

[data-theme="dark"] .permissionTool {
  background-color: rgba(255, 255, 255, 0.1);
}

[data-theme="dark"] .permissionInput {
  background-color: rgba(255, 255, 255, 0.05);
}

[data-theme="dark"] .actionButton {
  background-color: rgba(255, 255, 255, 0.05);
}

[data-theme="dark"] .actionButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Permission mode buttons with combined dropdown */
.permissionModeButtons {
  display: flex;
  align-items: center;
  gap: 8px;
}

.combinedPermissionButton {
  display: flex;
  align-items: center;
  background-color: var(--color-text-primary);
  color: var(--color-bg-primary);
  border-radius: 20px;
  overflow: hidden;
}

.permissionMainButton {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 2px 12px;
  border: none;
  background: transparent;
  color: inherit;
  font-family: var(--font-sans);
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: none;
  min-width: 48px;
  width: 48px;
}

.permissionMainButton:hover:not(:disabled) {
  background-color: rgba(255, 255, 255, 0.1);
}

.permissionDropdownButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  border-left: 1px solid rgba(255, 255, 255, 0.2);
  transition: none;
  opacity: 0.8;
}

.permissionDropdownButton:hover:not(:disabled) {
  opacity: 1;
  background-color: rgba(255, 255, 255, 0.1);
}

.permissionMainButton:disabled,
.permissionDropdownButton:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Style for disabled combined permission button */
.combinedPermissionButton:has(.permissionMainButton:disabled) {
  background-color: var(--color-bg-secondary);
  color: var(--color-text-secondary);
  opacity: 0.5;
}

/* Separate Plan button styling */
.btn {
  position: relative;
  border: none;
  cursor: pointer;
  transition: all 0.15s ease;
  font-family: var(--font-sans);
  font-size: 14px;
  font-weight: 500;
  border-radius: 20px;
  padding: 8px 16px;
  min-width: 60px;
}

.btnContent {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
}

.btnSecondary {
  background-color: transparent;
  color: var(--color-text-primary);
  border: 1px solid var(--color-border);
}

.btnSecondary:hover:not(:disabled) {
  background-color: var(--color-bg-tertiary);
}

.btn:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.btn:focus-visible,
.permissionMainButton:focus-visible,
.permissionDropdownButton:focus-visible {
  outline: 2px solid var(--color-accent);
  outline-offset: 2px;
}


/* Permission dropdown option styles */
.permissionOption {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 2px;
  width: 100%;
}

.permissionOptionHeader {
  display: flex;
  align-items: center;
  gap: 8px;
}

.permissionOptionLabel {
  font-size: 14px;
  font-weight: 500;
  color: var(--color-text-primary);
}

.permissionOptionDescription {
  font-size: 12px;
  color: var(--color-text-secondary);
  opacity: 0.8;
  padding-left: 22px;
}

/* Command autocomplete option styles */
.commandOption {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 2px;
  width: 100%;
}

.commandName {
  font-size: 14px;
  color: var(--color-text-primary);
}

.commandDescription {
  font-size: 12px;
  color: var(--color-text-secondary);
  opacity: 0.8;
}

/* Model dropdown option styles */
.modelOption {
  display: flex;
  align-items: center;
  gap: 8px;
  width: 100%;
}

.modelOptionLabel {
  font-size: 14px;
  font-weight: 500;
  color: var(--color-text-primary);
}

/* Waveform container */
.waveformContainer {
  width: 100%;
  min-height: 80px;
  padding: 0px 0px 34px 0;
  border: none;
  background: transparent;
  overflow-y: hidden;
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

/* Recording controls */
.recordingControls {
  display: flex;
  align-items: center;
  gap: 8px;
}

.recordingButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  padding: 0;
  border: none;
  background: var(--color-bg-secondary);
  color: var(--color-text-primary);
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.15s ease;
}

.recordingButton:hover:not(:disabled) {
  background: var(--color-bg-tertiary);
  transform: scale(1.03);
}

.recordingButton:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.recordingButton:focus-visible {
  outline: 2px solid var(--color-accent);
  outline-offset: 2px;
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .buttonText {
    display: none;
  }
}